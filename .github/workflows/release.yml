name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            pkg-config

      - name: Install OpenSSL (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install openssl -y --no-progress
          echo "OPENSSL_DIR=C:\Program Files\OpenSSL-Win64" >> $env:GITHUB_ENV
          echo "OPENSSL_LIB_DIR=C:\Program Files\OpenSSL-Win64\lib" >> $env:GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=C:\Program Files\OpenSSL-Win64\include" >> $env:GITHUB_ENV

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Install frontend dependencies
        run: yarn install --network-timeout 1000000 

      - name: Build frontend
        run: yarn build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Build the app
        uses: tauri-apps/tauri-action@v0.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENSSL_DIR: ${{ matrix.platform == 'windows-latest' && 'C:\Program Files\OpenSSL-Win64' || '' }}
          OPENSSL_LIB_DIR: ${{ matrix.platform == 'windows-latest' && 'C:\Program Files\OpenSSL-Win64\lib' || '' }}
          OPENSSL_INCLUDE_DIR: ${{ matrix.platform == 'windows-latest' && 'C:\Program Files\OpenSSL-Win64\include' || '' }}
          RUSTFLAGS: ${{ matrix.platform == 'windows-latest' && '-C target-feature=+crt-static' || '' }}
        with:
          tagName: v__VERSION__
          releaseName: 'KeyKeeper v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform == 'macos-latest' && '--target aarch64-apple-darwin' || '' }}